Что сейчас сделано?	
	Разобрался с создание компонентов из DLL на Delphi, пройден учебный пример, первично разобрался с архитектурой блоков-компонентов.
Cоздан рабочий проект Delphi для разработки и сравнительной отладки со старыми компонентами mvtu_std. 
По SimInTech - 
	Разобрался с сокрытием свойств в свойства объектов.
С динамическим изменением количества входных портов пока полной ясности нет, похоже собирать субмодель и на ее основе уже делать блок?

По архитектуре – 
1 путь(,имхо неправильный)
Возможно более быстрый, но некрасивый-
Сейчас пытаться из готовых блоков слепить Франкенштейна.
Сейчас есть модули  - 
Интерполяции 1-мерной функции из 1d таблицы TFromTable.GetFunValue()
Интерполяция 1-мерной функции из 2d таблицы
TFromTable2D. GetFunValue()/ GetFunValueWithoutExtrapolation()
Модуль интерполяции InterpolFuncs.pas – вызывается похоже только из блоков интерполяции функций, заданных в виде таблицы. 
Все делают что-то близко похожее, у каждого объявлены свои управляющие флаги, пересекающиеся по смыслу.
Сейчас есть блоки чтения tlb файлов, tlbs.pas, csv – файлы он подхватит, для JSON всё равно его переделывать в явном виде?

2 путь- 
Чуть более медленный, но более предсказуемый и легче поддержка в будущем.
Общий класс задания N-мерной функции – файл и файлы csv, tlb, JSON, excel(?), HDR(?), порты, матрицы через св-ва объектов. + Обязательно код тестирования эквивалентности независимости от задания.
Общий модуль для интерполяции N-мерной функции. Скорее всего по типу InterpolFuncs.pas, но для N-мерной функции. +Обязательно тесты.
И реализация интерполяции в соответствии с заданием+ тесты, тесты, тесты.
Этот вариант мне более нравится.

Что вызвало трудности?
	С размерностями входов/выходов не сразу разобрался, до сих пор полной ясности нет.
	До сих пор не очень понятно, как организовать автотестирование связки SimInTech+DLL блока, сейчас все врукопашную?

Какой прогноз по срокам?
	Думаю более 50% работы уже сделано, много времени потратил на раскачку и затупы, далее ровнее и без провалов по времени пойдет. 

Где сейчас посмотреть код и проекты?
Код DLL и отладочные проекты для блока лежат по ссылке -https://github.com/vasily84/SIT_InterpolationBlock/
Далее буду обновлять ежедневно. 

Что уже замечено? (для телефонного обсуждения)
1.	По учебному проекту – 
2.	рис2. Возможно добавить информацию о именовании свойств как переменных? 
3.	Рис22. Нерабочий вариант, т.к. видимо новый способ задания размерности, сам разбирался по исходникам других блоков. 
4.	Рис.23 –переменные массивы var xdif1,…:TExtArray введены как глобальные, при создании нескольких экземпляров класса начинается путаница их совместного использования, лучше их перенести внутрь объявления класса TPID1.
5.	Желательно добавить краткую информацию о удалении созданных массивов в деструкторе.

6.	* Не понял совсем где перераспределяется память переменных состояния объекта, в самом SimInTech? Мы их создаем в конструкторе с размером (1), но затем по ходу работы программы в отладчике у них корректный размер?

7.	* По стилю кодирования – часто в коде встречаются функции и процедуры, объявленные без аргументов, но вызываемые с аргументами. Раньше так обычно делали при реализации функций с неопределенным числом аргументов, но в коде всегда передают одинаковое количество. В чем смысл, ведь читаемость теряется? Наследие царизма?

8.	If Assigned(A).. vs if A<>nil .., Free vs FreeAndNil()? – вкусовщина?
